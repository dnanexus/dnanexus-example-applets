2017-07-25 16:20:23,288 : removing: /Users/sosazuwa/dnanexus-example-applets/docs/_tutorials/samtools_count_para_reg_multiprocess_py.md
2017-07-25 16:20:23,288 : Front matter field: source value samtools_count_para_reg_multiprocess_py
2017-07-25 16:20:23,288 : Front matter field: title value SAMtools count regions in parallel
2017-07-25 16:20:23,289 : Front matter field: tutorial_type value parallel
2017-07-25 16:20:23,289 : Front matter field: language value python
2017-07-25 16:20:23,289 : front matter written
2017-07-25 16:20:23,289 : Code region search
2017-07-25 16:20:23,289 : regular comment, line: #!/usr/bin/env python
2017-07-25 16:20:23,289 : regular comment, line: #
2017-07-25 16:20:23,290 : regular comment, line: # This app performs a SAMtools count via the following implementation:
2017-07-25 16:20:23,290 : regular comment, line: #   - dxpy.download_all_inputs is used.
2017-07-25 16:20:23,290 : regular comment, line: # SAMtools count in parallel per region (multi core) using multiprocess
2017-07-25 16:20:23,290 : block comment, line: """
2017-07-25 16:20:23,291 : block comment, line: """
2017-07-25 16:20:23,291 : block comment, line: """
2017-07-25 16:20:23,291 : block comment, line: """
2017-07-25 16:20:23,292 : block comment, line: """
2017-07-25 16:20:23,292 : block comment, line: """
2017-07-25 16:20:23,292 : regular comment, line: # Not required.  Making sure all files generated will be
2017-07-25 16:20:23,292 : regular comment, line: # in an easy to find location if ssh is needed.
2017-07-25 16:20:23,292 : regular comment, line: # dxpy.download_all_inputs will download all input files into
2017-07-25 16:20:23,293 : regular comment, line: # the /home/dnanexus/in directory.  A folder will be created for each
2017-07-25 16:20:23,293 : regular comment, line: # input and the file(s) will be download to that directory.
2017-07-25 16:20:23,293 : regular comment, line: #
2017-07-25 16:20:23,293 : regular comment, line: # In this example out dictionary inputs has the following key, value pairs
2017-07-25 16:20:23,293 : regular comment, line: #     mappings_sorted_bam_path: [u'/home/dnanexus/in/mappings_sorted_bam/SRR504516.bam']
2017-07-25 16:20:23,294 : regular comment, line: #     mappings_sorted_bam_name: u'SRR504516.bam'
2017-07-25 16:20:23,294 : regular comment, line: #     mappings_sorted_bam_prefix: u'SRR504516'
2017-07-25 16:20:23,294 : regular comment, line: #     mappings_sorted_bai_path: u'/home/dnanexus/in/mappings_sorted_bai/SRR504516.bam.bai'
2017-07-25 16:20:23,295 : regular comment, line: #     mappings_sorted_bai_name: u'SRR504516.bam.bai'
2017-07-25 16:20:23,295 : regular comment, line: #     mappings_sorted_bai_prefix: u'SRR504516'
2017-07-25 16:20:23,295 : regular comment, line: # SAMtools view command required the bam.bai index file to be in the same
2017-07-25 16:20:23,295 : regular comment, line: # directory as the bam when specifying regions.
2017-07-25 16:20:23,296 : regular comment, line: #
2017-07-25 16:20:23,296 : regular comment, line: # When accessing key, value pairs from inputs dictionary note that the
2017-07-25 16:20:23,296 : regular comment, line: # values are stored as a list.
2017-07-25 16:20:23,296 : regular comment, line: # If our inputs were specified as array:files
2017-07-25 16:20:23,297 : regular comment, line: # our list would contain more than 1 element
2017-07-25 16:20:23,297 : regular comment, line: # Create list of regions to parallelize
2017-07-25 16:20:23,297 : regular comment, line: # In parallel create workers for each region and generate view cmds
2017-07-25 16:20:23,297 : regular comment, line: # Run in parallel using multiprocessing.  multiprocessing.pool class takes
2017-07-25 16:20:23,297 : regular comment, line: # an optional argument 'processes' for how many cores the created workers
2017-07-25 16:20:23,298 : regular comment, line: # can work on.  When not specified 'processes' = # of cores on system
2017-07-25 16:20:23,298 : regular comment, line: # Assigning processes=cpu_count() explicitly is not needed.
2017-07-25 16:20:23,298 : regular comment, line: #
2017-07-25 16:20:23,298 : regular comment, line: # We process first then verify the results of processing. Throwing an
2017-07-25 16:20:23,298 : regular comment, line: # AppInternalError if any commands failed. Review the verify_pool_status()
2017-07-25 16:20:23,298 : regular comment, line: # function for details as to how job error logging works.
2017-07-25 16:20:23,299 : regular comment, line: # Write results to file
2017-07-25 16:20:23,299 : regular comment, line: # Create dictionary to be returned as output for the job
2017-07-25 16:20:23,299 : regular comment, line: # Dictionary must contain keys matching outputs set in dxapp.json
2017-07-25 16:20:23,299 : Code regions created
2017-07-25 16:20:23,300 : Force line match: ## Applet Script
2017-07-25 16:20:23,300 : Adding Func: FULL SCRIPT
