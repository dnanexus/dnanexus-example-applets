#!/bin/bash
# circos 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See http://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {
  # Setup (create working directories, download files, etc)
  mkdir /in /out
  conf_id=$(dx-jobutil-parse-link "$conf")
  echo Downloading $conf_id ...
  dx download $conf_id -o /in/circos.conf
  for i in "${extra[@]}"
  do
    id=$(dx-jobutil-parse-link "$i")
    echo Downloading $id ...
    dx download $id -o /in/
  done

  echo
  echo Input files:
  ls -1 /in
  echo

  # Run Circos
  cd /opt/circos-0.63-4/bin
  echo $ perl test.modules
  perl test.modules
  echo
  echo $ circos -png -svg -conf /in/circos.conf -outputdir /out -outputfile circos.png
  perl circos -version
  perl -X circos -png -svg -conf /in/circos.conf -outputdir /out -outputfile circos.png

  # Assemble output and return
  if [ -f /out/circos.html ] ; then
    mv /out/circos.html /out/circos_map.html
    echo \<html\>\<body\> > /out/circos.html
    # Circos doesn't close its <area> tags in the map file, which makes some parsers ill
    cat /out/circos_map.html | perl -pe '$_ =~ s/(<area.*)([^\/])>$/$1$2\/>/' >> /out/circos.html
    echo \<img usemap='circos' src=\'circos.png\' /\> >> /out/circos.html
    echo \</body\>\</html\> >> /out/circos.html
    report_include=circos.html
    echo Uploading $base_name.html...
    html_id=$(dx upload --no-progress --brief /out/circos.html)
    dx rename $html_id "$base_name.html"
    dx-jobutil-add-output html $html_id --class=file
  elif [ $usesvg == "true" ] ; then
    report_include=circos.svg
  else
    report_include=circos.png
  fi

  if [ $svg == "true" ]; then
    echo Uploading $base_name.svg...
    svg_id=$(dx upload --no-progress --brief /out/circos.svg)
    dx rename $svg_id "$base_name.svg"
    dx-jobutil-add-output svg $svg_id --class=file
  fi

  if [ $png == "true" ]; then
    echo Uploading $base_name.png...
    png_id=$(dx upload --no-progress --brief /out/circos.png)
    dx rename $png_id "$base_name.png"
    dx-jobutil-add-output png $png_id --class=file
  fi

  echo $ dx-build-report-html /out/$report_include -r /Circos\\ Report
  report_json=$(dx-build-report-html /out/$report_include -r /Circos\ Report)
  report_id=$(echo $report_json | grep -o 'record-\w\{24\}')
  dx rename $report_id "$report_name"
  dx-jobutil-add-output report $report_id --class=record

  echo All done!
}
